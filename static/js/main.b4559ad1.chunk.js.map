{"version":3,"sources":["Square.js","Board.js","Game.js","serviceWorker.js","index.js"],"names":["Square","props","value","onClick","winner","squareClass","type","className","data-pro","Board","i","this","squares","includes","sizeOfBoard","Math","sqrt","length","board","Array","fill","squaresTemp","j","squareKey","push","key","renderSquare","renderBoard","React","Component","calculateWinner","size","index","winLocation","winPlayer","Game","state","history","location","xIsNext","stepNumber","isReverse","setState","slice","historyCurrent","floor","join","concat","step","document","querySelectorAll","forEach","item","classList","remove","getElementById","add","status","moves","map","move","desc","id","style","marginTop","jumpTo","handleClick","restartClick","reverseHis","reversed","reverse","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4559ad1.chunk.js","sourcesContent":["import React from 'react';\n\n\n// class Square extends Component {\n//   render() {\n//     const { value } = this.props;\n//     const { onClick } = this.props;\n//     const { winner } = this.props;\n//     const squareClass = `square ${winner}`\n//     return (\n\n//       <button className={squareClass} data-pro={value} onClick={onClick}>{value}</button>\n\n//     );\n//   }\n// }\n\nconst Square = function (props) {\n  const { value } = props;\n  const { onClick } = props;\n  const { winner } = props;\n  const squareClass = `square ${winner}`\n  return (\n\n    <button type=\"button\" className={squareClass} data-pro={value} onClick={onClick}>{value}</button>\n\n  );\n\n}\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const { winner } = this.props;\n    const { squares } = this.props;\n    const { onClick } = this.props;\n    return <Square value={squares[i]} onClick={() => onClick(i)} winner={winner && winner.includes(i) ? 'winner' : ''} />\n  }\n\n  renderBoard() {\n    const { squares } = this.props;\n    const sizeOfBoard = Math.sqrt(squares.length);\n    const board = Array(sizeOfBoard).fill(null);\n    for (let i = 0; i < sizeOfBoard; i += 1) {\n      const squaresTemp = Array(sizeOfBoard).fill(null);\n      for (let j = 0; j < sizeOfBoard; j += 1) {\n        const squareKey = i * sizeOfBoard + j;\n        squaresTemp.push(<span key={squareKey}>{this.renderSquare(squareKey)}</span>);\n      }\n      board.push(<div key={i}>{squaresTemp}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return (\n      <div>\n\n        <div>{this.renderBoard()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Board;","/* eslint-disable react/no-access-state-in-setstate */\nimport React from 'react';\nimport Board from './Board';\n\nimport './Game.css';\n\n\nfunction calculateWinner(squares) {\n    const size = Math.sqrt(squares.length);\n\n    for (let i = 0; i < size; i += 1) {\n        for (let j = 0; j < size; j += 1) {\n            const index = i * size + j;\n\n            // if (((index < (i + 1) * size - 4) && (squares[index - 1] === null || squares[index + 5] === null) && squares[index] && squares[index] === squares[index + 1] && squares[index] === squares[index + 2] && squares[index] === squares[index + 3] && squares[index] === squares[index + 4])\n            //     || ((squares[index - size] === null || squares[index + 5 * size] === null) && squares[index] && squares[index] === squares[index + size * 1] && squares[index] === squares[index + size * 2] && squares[index] === squares[index + size * 3] && squares[index] === squares[index + size * 4])\n            //     || ((squares[index - size * 1 - 1] === null || squares[index + size * 5 + 5] === null) && squares[index] && squares[index] === squares[index + size * 1 + 1] && squares[index] === squares[index + size * 2 + 2] && squares[index] === squares[index + size * 3 + 3] && squares[index] === squares[index + size * 4 + 4])\n            //     || ((squares[index - size * 1 + 1] === null || squares[index + size * 5 - 5] === null) && squares[index] && squares[index] === squares[index + size * 1 - 1] && squares[index] === squares[index + size * 2 - 2] && squares[index] === squares[index + size * 3 - 3] && squares[index] === squares[index + size * 4 - 4])) {\n            //     return {\n            //         winLocation: [index, index + 1, index + 2, index + 3, index + 4],\n            //         winPlayer: squares[index]\n            //     };\n            // }\n\n            if (\n                index < (i + 1) * size - 4 &&\n                (squares[index - 1] === null || squares[index + 5] === null) &&\n                squares[index] &&\n                squares[index] === squares[index + 1] &&\n                squares[index] === squares[index + 2] &&\n                squares[index] === squares[index + 3] &&\n                squares[index] === squares[index + 4]\n            ) {\n                return {\n                    winLocation: [index, index + 1, index + 2, index + 3, index + 4],\n                    winPlayer: squares[index]\n                };\n            }\n            if (\n                (squares[index - size] === null ||\n                    squares[index + 5 * size] === null) &&\n                squares[index] &&\n                squares[index] === squares[index + size * 1] &&\n                squares[index] === squares[index + size * 2] &&\n                squares[index] === squares[index + size * 3] &&\n                squares[index] === squares[index + size * 4]\n            ) {\n                return {\n                    winLocation: [\n                        index,\n                        index + size * 1,\n                        index + size * 2,\n                        index + size * 3,\n                        index + size * 4\n                    ],\n                    winPlayer: squares[index]\n                };\n            } if (\n                (squares[index - size * 1 - 1] === null ||\n                    squares[index + size * 5 + 5] === null) &&\n                squares[index] &&\n                squares[index] === squares[index + size * 1 + 1] &&\n                squares[index] === squares[index + size * 2 + 2] &&\n                squares[index] === squares[index + size * 3 + 3] &&\n                squares[index] === squares[index + size * 4 + 4]\n            ) {\n                return {\n                    winLocation: [\n                        index,\n                        index + size * 1 + 1,\n                        index + size * 2 + 2,\n                        index + size * 3 + 3,\n                        index + size * 4 + 4\n                    ],\n                    winPlayer: squares[index]\n                };\n            } if (\n                (squares[index - size * 1 + 1] === null ||\n                    squares[index + size * 5 - 5] === null) &&\n                squares[index] &&\n                squares[index] === squares[index + size * 1 - 1] &&\n                squares[index] === squares[index + size * 2 - 2] &&\n                squares[index] === squares[index + size * 3 - 3] &&\n                squares[index] === squares[index + size * 4 - 4]\n            ) {\n                return {\n                    winLocation: [\n                        index,\n                        index + size * 1 - 1,\n                        index + size * 2 - 2,\n                        index + size * 3 - 3,\n                        index + size * 4 - 4\n                    ],\n                    winPlayer: squares[index]\n                };\n            }\n        }\n    }\n    return null;\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{ squares: Array(400).fill(null), location: '' }],\n            xIsNext: true,\n            stepNumber: 0,\n            isReverse: false\n        };\n    }\n\n    reverseHis(isReverse) {\n        this.setState({\n            isReverse: !isReverse\n        });\n    }\n\n    restartClick() {\n        // eslint-disable-next-line react/destructuring-assignment\n        const history = this.state.history.slice();\n        const newHistory = history[0];\n        const squares = newHistory.squares.slice();\n\n        this.setState({\n            history: [{ squares }],\n            stepNumber: 0,\n            xIsNext: true,\n            isReverse: false\n        });\n    }\n\n    handleClick(i) {\n        const { stepNumber } = this.state;\n        const { xIsNext } = this.state;\n        const { history } = this.state;\n        const historyCurrent = history.slice(0, stepNumber + 1);\n        const current = historyCurrent[historyCurrent.length - 1]; // Get the last element of history\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        const size = Math.sqrt(historyCurrent[0].squares.length);\n        const location = [Math.floor(i / size) + 1, (i % size) + 1].join(',');\n        squares[i] = xIsNext ? 'X' : 'O';\n        this.setState({\n            history: historyCurrent.concat([{ squares, location }]),\n            xIsNext: !xIsNext,\n            stepNumber: historyCurrent.length\n        });\n    }\n\n    jumpTo(step) {\n        const temp = document.querySelectorAll('.chosen-btn');\n        temp.forEach(item => {\n            item.classList.remove('chosen-btn');\n        });\n\n        document.getElementById(`${step}`).classList.add('chosen-btn');\n        this.setState({\n            stepNumber: step,\n            xIsNext: step % 2 === 0\n        });\n    }\n\n    render() {\n        const { isReverse } = this.state;\n\n\n        const { history } = this.state;\n        const { stepNumber } = this.state;\n        const current = history[stepNumber];\n        const squares = current.squares.slice();\n        const winner = calculateWinner(squares);\n        let status;\n\n        if (winner) {\n            status = `Winner is: ${winner.winPlayer}`;\n        } else {\n            const { xIsNext } = this.state;\n            status = `Next player is: ${xIsNext ? 'X' : 'O'}`;\n        }\n\n        const moves = history.map((step, move) => {\n            const desc = move\n                ? `Go to move #${move} (${step.location})`\n                : 'Go to game start!';\n            return (\n                <li key={move.id}>\n                    <button type=\"button\"\n                        style={{ marginTop: 5 }}\n                        className=\"btn btn-sm btn-outline-dark\"\n                        id={move}\n                        onClick={() => this.jumpTo(move)}\n                    >\n                        {desc}\n                    </button>\n                </li>\n            );\n        });\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={squares}\n                        onClick={i => this.handleClick(i)}\n                        winner={winner && winner.winLocation}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div className=\"row\">\n                        <div className=\"col-6 status\">{status}</div>\n                        <div className=\"col-3\">\n                            <button\n                                className=\"btn btn-sm btn-outline-success\"\n                                type=\"button\"\n                                onClick={() => this.restartClick()}\n                            >\n                                Restart\n              </button>\n                        </div>\n                        <div className=\"col-3\">\n                            <button type=\"button\"\n                                className=\"btn btn-sm btn-outline-primary\"\n                                onClick={() => this.reverseHis(isReverse)}\n                            >\n                                Sort step\n              </button>\n                        </div>\n                    </div>\n                    <ol reversed={isReverse ? 'reverse' : ''}>\n                        {isReverse ? moves.reverse() : moves}\n                    </ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}